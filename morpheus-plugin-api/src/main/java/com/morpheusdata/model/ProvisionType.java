package com.morpheusdata.model;

public class ProvisionType extends MorpheusModel {
	public String code;
	public String name;
	public String description;
	public String hostType; //server, container, vm;
	public String serverType; //'morpheus-node' // 'ami', 'vm', 'unmanaged';
	public String nodeFormat;
	public String provisionService;
	public Boolean pickServer = false; //do we choose a server to provision too;
	public Boolean createServer = false; //do we create a compute server for each instance;
	public Boolean aclEnabled = true; //do we control the firewall;
	public Boolean multiTenant = true; //more than one instance on a box;
	public Boolean hostNetwork = true; //is the network on host or an overlay;
	public Boolean managed = false; //is morpheus provisioning;
	public Boolean customSupported = false; //byoc allowed;
	public Boolean mapPorts = false;
	public Boolean exportServer = false; //for allowing a vm dump out of a hypervisor;
	public Boolean cloneTemplate = false; //if cloud allows cloning a vm to a template;
	public Boolean cloneable = true; //if cloud allows cloning a vm to a template;
	public Boolean hasVolumes = true; // whether volumes should be shown;
	public Boolean addVolumes = false; // whether multiple volumes are supported;
	public Boolean hasDatastore = false;
	public Boolean supportsAutoDatastore = false;
	public Boolean hasStorageControllers = false;
	public Boolean hasNetworks = false;
	public Boolean hasConfigurableCpuSockets = false;
	public Boolean hasZonePools = false;
	public Boolean zonePoolRequired = false;
	public Boolean hasSnapshots = false;
	public Boolean networksScopedToPools = false;
	public Integer maxNetworks = 0;
	public Boolean customizeVolume = false; // whether additional volumes are customizable;
	public Boolean rootDiskCustomizable = false; // whether the root disk is customizable;
	public Boolean rootDiskSizeKnown = true;
	public Boolean rootDiskResizable = false; // whether the root disk is customizable;
	public Boolean lvmSupported = true;
	public Boolean resizeCopiesVolumes = false;
	public Boolean reconfigureSupported = true;
	public Boolean volumesPreservable = false;
	public Boolean supportsReplicaSets = false;
	public Boolean hasSecurityGroups = false;
	public Boolean hasParameters = false;
	public Boolean hasContainers = true;
	public Boolean hasResources = false; //if its services and not vms or containers;
	public Boolean canEnforceTags = false;
	public Boolean hasPlanTagMatch = false;
	public String hostDiskMode;
	public Integer minDisk = 1;
	public Integer maxDisk;
	public String backupType;
	public Boolean disableRootDatastore = false;

	public String viewSet;
	public String containerService;
	public String deployTargetService;
	public Boolean supportsCustomServicePlans = false;
	public Boolean supportsConfigManagement = true;
	public Boolean hasSecurityGroupsOnNetworks = false;
	public Boolean supportsNetworkSelection = true;
}
