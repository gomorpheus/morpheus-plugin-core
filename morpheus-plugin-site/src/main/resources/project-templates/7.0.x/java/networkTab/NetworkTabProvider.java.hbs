package {{basePackage}};

import com.morpheusdata.core.AbstractNetworkTabProvider;
import com.morpheusdata.core.MorpheusContext;
import com.morpheusdata.core.Plugin;
import com.morpheusdata.model.Account;
import com.morpheusdata.model.Network;
import com.morpheusdata.model.User;
import com.morpheusdata.views.HTMLResponse;
import com.morpheusdata.views.ViewModel;

public class {{pluginNameCamel}}NetworkTabProvider extends AbstractNetworkTabProvider {
	protected MorpheusContext morpheusContext;
	protected Plugin plugin;

	public {{pluginNameCamel}}NetworkTabProvider(Plugin plugin, MorpheusContext ctx) {
		super();
		this.plugin = plugin;
		this.morpheusContext = ctx;
	}
	/**
	 * Network details provided to your rendering engine
	 *
	 * @param network details
	 * @return result of rendering a template
	 */
	@Override
	public HTMLResponse renderTemplate(Network network) {
		ViewModel<Network> model = new ViewModel<>();
		model.object = network;
		return getRenderer().renderTemplate("hbs/networkTab", model);
	}

	/**
	 * Provide logic when tab should be displayed. This logic is checked after permissions are validated.
	 *
	 * @param network Network details
	 * @param user    current User details
	 * @param account Account details
	 * @return whether the tab should be displayed
	 */
	@Override
	public Boolean show(Network network, User user, Account account) {
		return true;
	}

	/**
	 * Returns the Morpheus Context for interacting with data stored in the Main Morpheus Application
	 *
	 * @return an implementation of the MorpheusContext for running Future based rxJava queries
	 */
	@Override
	public MorpheusContext getMorpheus() {
		return this.morpheusContext;
	}

	/**
	 * Returns the instance of the Plugin class that this provider is loaded from
	 *
	 * @return Plugin class contains references to other providers
	 */
	@Override
	public Plugin getPlugin() {
		return this.plugin;
	}

	/**
	 * A unique shortcode used for referencing the provided provider. Make sure this is going to be unique as any data
	 * that is seeded or generated related to this provider will reference it by this code.
	 *
	 * @return short code string that should be unique across all other plugin implementations.
	 */
	@Override
	public String getCode() {
		return "{{pluginCode}}-instanceTab";
	}

	/**
	 * Provides the provider name for reference when adding to the Morpheus Orchestrator
	 * NOTE: This may be useful to set as an i18n key for UI reference and localization support.
	 *
	 * @return either an English name of a Provider or an i18n based key that can be scanned for in a properties file.
	 */
	@Override
	public String getName() {
		return "{{pluginName}}";
	}
}
